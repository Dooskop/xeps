<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE xep SYSTEM 'xep.dtd' [
  <!ENTITY % ents SYSTEM 'xep.ent'>
%ents;
]>
<?xml-stylesheet type='text/xsl' href='xep.xsl'?>
<?xml-stylesheet type="text/css" href="xmpp.css"?>
<xep>
<header>
  <title>Mediated Information eXchange (MIX): MIX Administration</title>
  <abstract>This document defines an extension to Mediated Information eXchange (MIX) specified in XEP-0369.  This specification defines a framework for MIX administration and administration operations. </abstract>
  &LEGALNOTICE;
  <number>0406</number>
  <status>Deferred</status>
  <type>Standards Track</type>
  <sig>Standards</sig>
  <approver>Council</approver>
  <dependencies>
    <spec>XMPP Core</spec>
    <spec>XMPP IM</spec>
    <spec>XEP-0004</spec>
    <spec>XEP-0030</spec>
    <spec>XEP-0054</spec>
    <spec>XEP-0060</spec>
    <spec>XEP-0084</spec>
    <spec>XEP-0128</spec>
    <spec>XEP-0198</spec>
    <spec>XEP-0292</spec>
    <spec>XEP-0297</spec>
    <spec>XEP-0313</spec>
    <spec>XEP-0369</spec>
    <spec>XEP-0372</spec>
    <spec>XEP-0403</spec>
    <spec>XEP-0404</spec>
  </dependencies>
  <supersedes/>
  <supersededby/>
  <shortname>MIX-ADMIN</shortname>
  &ksmithisode;
  &skille;
  <revision>
    <version>0.2.0</version>
    <date>2018-06-06</date>
    <initials>sek</initials>
    <remark><p>
      Add Nick Mandatory option;
    </p></remark>
  </revision> 
  <revision>
    <version>0.1.0</version>
    <date>2018-05-21</date>
    <initials>sek</initials>
    <remark><p>
      Split out from MIX 0.10.0;
    </p></remark>
  </revision>

</header>
<section1 topic='Introduction' anchor='intro'>
  <p>The Mediated Information eXchange (MIX) protocol framework and core capabilities are specified in &xep0369; (MIX-CORE).    This document defines a framework for administering a MIX service, including &xep0369;, &xep0403; and &xep0404;.   It defines MIX channel configuration in a standardized manner, to enable consistent MIX administration using standard capabilities.
   </p>

</section1>










  <section1 topic="Admininstrative MIX Nodes" anchor="concepts-nodes">
    <p>This specification  defines three standard nodes to support configuration.   The configuration node is required to support this specification and the other two nodes are optional:</p>
    <table caption="Administrative MIX Nodes">

      <tr><td>Allowed</td><td>'urn:xmpp:mix:nodes:allowed'</td><td>For storing JIDs that are allowed to be channel participants.</td><td>PubSub</td><td>PubSub</td></tr>
      <tr><td>Banned</td><td>'urn:xmpp:mix:nodes:banned'</td><td>For storing JIDs that are not allowed to be channel participants. </td><td>PubSub</td><td>PubSub</td></tr>
      <tr><td>Configuration</td><td>'urn:xmpp:mix:nodes:config'</td><td>For storing channel configuration. </td><td>PubSub</td><td>PubSub</td></tr>
    </table>
    <p>

    </p>
    <section2 topic="Roles" anchor="roles">
      <p>
        There are a number of MIX roles for each channel, listed in the following table.   Rights will be assigned to the various roles in the channel configuration node.
      </p>
      <table caption="Channel Roles">
        <tr><th>Role</th><th>Membership and Rights</th></tr>
        <tr><td>Owners</td><td>These are owners of the channel, as specified in the channel configuration node.  Only owners are allowed to modify the channel configuration node.</td></tr>
        <tr><td>Administrators</td><td>Administrators are defined in the channel configuration node.  Administrators have update rights to the Allowed Node and Banned Node, so they can control which users are allowed to participate in a channel.  </td></tr>
        <tr><td>Participants</td><td>Participants are users listed by JID in the participants node.</td></tr>
        <tr><td>Allowed</td><td>Allowed is the set of JIDs that are participants or are allowed to become participants.  A JID is allowed if it does not match an entry in the banned node and either it matches an entry in the allowed node or the allowed node is not present. </td></tr>
        <tr><td>Anyone</td><td>Any user, including users in the banned node.</td></tr>
      </table>
      <p>
        There MUST always be at least one Owner set for a Channel.   Administrators are optional and do not need to be set.  Administrators and Owners MAY be participants but are not required to be.  Owners and Administrators are configured in the information node.    Participants and Allowed are specified in separate nodes.
 Rights are defined in a strictly hierarchical manner following the order of this table, so that for example Owners will always have rights that Administrators have.
      </p>
    </section2>



      <section2 topic="Allowed" anchor="allowed-node">
        <p>
          This node represents a list of JIDs that are allowed to become participants. If the Allowed node is not present, all JIDs are allowed. This node is accessed and managed using standard pubsub.  The Allowed list is always considered in conjunction with the banned list, stored in the banned node.  Only Administrators and Owners have write permission to the Allowed node and are also the only roles that are allowed to subscribe to this node.   The Allowed node is a permanent node.  Each item contains a real bare JID.  The following example shows how the Allowed list can specify single JIDs and domains.
        </p>
        <example caption="Allowed Node"><![CDATA[
<items node='urn:xmpp:mix:nodes:allowed'>
  <item id='shakespeare.example'/>
  <item id='alice@wonderland.example'/>
</items>
]]></example>
      </section2>
      <section2 topic="Banned" anchor="banned-node">
        <p>
          This node represents a list of JIDs that are explicitly not allowed to become participants. The values in this list take priority over values in the Allowed node. This node is accessed and managed using standard pubsub  Only Administrators and Owners have write permission to the Banned node and are also the only roles that are allowed to subscribe to this node. Each item contains a real bare JID.  The Banned node can contain bare JIDs and/or domains.  The Banned node is a permanent node.
        </p>
        <example caption="Banned Node"><![CDATA[
<items node='urn:xmpp:mix:nodes:banned'>
  <item id='lear@shakespeare.example'/>
  <item id='macbeth@shakespeare.example'/>
</items>
]]></example>
      </section2>
    <section2 topic="Configuration Node" anchor="config-node">
      <p>
        The Configuration node holds the configuration of the channel as a single item, named by the date-time of the last update to the configuration.  The Configuration node is a permanent node with a maximum of one item. Previous configuration history MAY be accessed by MAM.  Users with read access to the configuration node MAY subscribe to the configuration node to get notification of configuration change.  This node is accessed and managed using standard pubsub. The configuration node is OPTIONAL for a MIX channel.  For example, configuration choices could be fixed and not exposed.   A subset of the defined configuration options MAY be used and additional non-standard configuration options MAY be added.   JIDs in the configuration MUST be real bare JIDs and not proxy JIDs.  If configuration options to control functionality of the nature described here are provided, the options defined in this standard MUST be used. The following configuration attributes are defined:
</p>
      <table caption="Configuration Node Attributes">
        <tr><th>Name</th><th>Description</th><th>Field Type</th><th>Values</th><th>Default</th></tr>
        <tr><td>'Last Change Made By'</td><td>Bare JID of the user making the last change.</td><td>jid-single</td><td>-</td><td>-</td></tr>
        <tr><td>'Owner'</td><td>Bare JIDs with Owner rights as defined in ACL node.  When a channel is created, the JID creating the channel is configured as an owner, unless this attribute is explicitly configured to another value.</td><td>jid-multi</td><td>-</td><td>-</td></tr>
        <tr><td>'Administrator'</td><td>Bare JIDs with Administrator rights.</td><td>jid-multi</td><td>-</td><td>-</td></tr>
        <tr><td>'End of Life'</td><td>The date and time at which the channel will be automatically removed by the server.   If this is not set, the channel is permanent.</td><td>text-single</td><td>-</td><td>-</td></tr>
        <tr><td>'Nodes Present'</td><td>Specifies which nodes are present. Presence of  config nodes is implicit.  Jidmap node MUST be present if participants node is present. 'avatar' means that both Avatar Data and Avatar Metadata nodes are present.</td><td>list-multi</td><td>'participants'; 'presence'; 'information'; 'allowed'; 'banned'; 'jidmap-visible'; 'avatar'</td><td>'participants'; 'presence'; 'information'; 'allowed'; 'banned'; 'jidmap-visible'; 'avatar'</td></tr>
        <tr><td>'Messages Node Subscription'</td><td>Controls who can subscribe to messages node.</td><td>list-single</td><td>'participants'; 'allowed'; 'anyone'</td><td>'participants'</td></tr>
        <tr><td>'Presence Node Subscription'</td><td>Controls who can subscribe to presence node.</td><td>list-single</td><td>'participants'; 'allowed'; 'anyone'</td><td>'participants'</td></tr>
        <tr><td>'Participants Node Subscription'</td><td>Controls who can subscribe to participants node.</td><td>list-single</td><td>'participants'; 'allowed'; 'anyone'; 'nobody'; 'admins'; 'owners'</td><td>'participants'</td></tr>

        <tr><td>'Information Node Subscription'</td><td>Controls who can subscribe to the information node.</td><td>list-single</td><td>'participants'; 'allowed'; 'anyone'</td><td>'participants'</td></tr>
        <tr><td>'Allowed Node Subscription'</td><td>Controls who can subscribe to allowed node.</td><td>list-single</td><td>'participants'; 'allowed';  'nobody'; 'admins'; 'owners' </td><td>'admins'</td></tr>
        <tr><td>'Banned Node Subscription'</td><td>Controls who can subscribe to banned node.</td><td>list-single</td><td>'participants'; 'allowed';  'nobody'; 'admins'; 'owners' </td><td>'admins'</td></tr>
        <tr><td>'Configuration Node Access'</td><td>Controls who can subscribe to configuration node and who has read access to it.</td><td>list-single</td><td>'participants'; 'allowed';  'nobody'; 'admins'; 'owners' </td><td>'owners'</td></tr>
        <tr><td>'Information Node Update Rights'</td><td>Controls who can make changes to the information node</td><td>list-single</td><td>'participants'; 'admins'; 'owners' </td><td>'admins'</td></tr>
        <tr><td>'Avatar Nodes Update Rights'</td><td>Controls who can make changes to the avatar data and metadata nodes</td><td>list-single</td><td>'participants'; 'admins'; 'owners' </td><td>'admins'</td></tr>

        <tr><td>'Open Presence'</td><td>If selected, any client MAY register presence.  If not selected, only clients with bare JID in the participants list are allowed to register presence.</td><td>boolean</td><td>-</td><td>false</td></tr>
        <tr><td>'Participants Must Provide Presence'</td><td>If selected, all channel participants are REQUIRED to share presence information with the channel.</td><td>boolean</td><td>-</td><td>false</td></tr>
        <tr><td>'User Message Retraction'</td><td>If this option is selected users will be able to retract messages that they have sent to the MIX channel.</td><td>boolean</td><td>-</td><td>false</td></tr>
        <tr><td>'Administrator Message Retraction Rights'</td><td>This controls which group is able to retract any message sent to the MIX channel.</td><td>list-single</td><td>'nobody'; 'admins'; 'owners'</td><td>'owners'</td></tr>
        <tr><td>'Participation Addition by Invitation from Participant'</td><td>This option extends a channel  so that  a channel participant has rights to invite and enable other users as participants.</td><td>boolean</td><td>-</td><td>false</td></tr>
        <tr><td>'Private Messages'</td><td>If this option is selected, private messages MAY be used with the channel.</td><td>boolean</td><td>-</td><td>true</td></tr>
        <tr><td>'Mandatory Nicks'</td><td>If this option is selected, every participant must have a Nick.</td><td>boolean</td><td>-</td><td>true</td></tr>       
      </table>
      <p>
        The configuration node is in &xep0004; format and includes all of the options used by the channel, including values for options using default values.  This means that the value in the form can be directly mapped with the form returned by configuration administration commands. Configuration nodes will typically have a large number of elements. The following short example is provided to illustrate the syntax of the configuration node.
      </p>
      <example caption="Configuration Node"><![CDATA[
<items node='urn:xmpp:mix:nodes:config'>
  <item id='2016-05-30T09:00:00'>
      <x xmlns='jabber:x:data' type='result'>
        <field var='FORM_TYPE' type='hidden'>
             <value>urn:xmpp:mix:admin:0</value>
        </field>
        <field var='Owner'>
            <value>hecate@shakespeare.example</value>
            <value>greymalkin@shakespeare.example</value>
        </field>
        <field var='Messages Node Subscription'>
           <value>allowed</value>
         </field>
         <field var='No Private Messages'>
            <value>true</value>
         </field>
         </x>
  </item>
</items>
]]></example>
    </section2>
  </section1>












  <section1 topic='Administrative Use Cases' anchor='usecases-admin'>








    <section2 topic='Modifying Channel Information' anchor='usecase-admin-information'>
      <p>Authorized users, typically owners and sometimes administrators, MAY modify the channel information.   The client MAY issue a pubsub get command to obtain a form that will facilitate update of the information node.   The values in the form show current values, which be defaults or MAY have been explicitly set.  In the following example, the channel name was previously set, but other values were not. </p>
      <example caption="Getting Information Form" ><![CDATA[
 <iq from='hag66@shakespeare.example/UUID-a1j/7533'
    id='lx09df27'
    to='mix.shakespeare.example'
    type='get'>
     <pubsub xmlns='http://jabber.org/protocol/'>
         <items node='urn:xmpp:mix:nodes:info'/>
     </pubsub>
</iq>

<iq from='mix.shakespeare.example'
    id='lx09df27'
    to='hag66@shakespeare.example/UUID-a1j/7533'
    type='result'>
    <pubsub xmlns='http://jabber.org/protocol/'>
     <items node='urn:xmpp:mix:nodes:info'>
       <item>
         <x xmlns='jabber:x:data' type='form'>
           <field var='FORM_TYPE' type='hidden'>
             <value>urn:xmpp:mix:core:0</value>
           </field>
           <title>Information Node Modification</title>
           <field type='text-multi'
                  label='Channel Name'
                   var='Name'>
              <value>Witches Coven</value>
            </field>
            <field type='text-multi'
                   label='Channel Description'
                   var='Description'/>
             <field type='jid-single'
                    label='Channel Administrative Contact'
                    var='Contact'/>
          </x>
      </item>
    </items>
  </pubsub>
</iq>
]]></example>
      <p>  Updating the information node is done using a pubsub set command.  The MIX channel MUST update the fields with values provided, leaving other fields unchanged.  The result returns the id used in the information node item, which is the date/time of the modification. </p>
      <example caption="Modifying Channel Information" ><![CDATA[
 <iq from='hag66@shakespeare.example/UUID-a1j/7533'
    id='lx09df27'
    to='mix.shakespeare.example'
    type='set'>
    <pubsub xmlns='http://jabber.org/protocol/pubsub'>
     <publish node='urn:xmpp:mix:nodes:info'>
       <items>
          <item>
            <x xmlns='jabber:x:data' type='submit'>
              <field var='FORM_TYPE' type='hidden'>
                <value>urn:xmpp:mix:core:0</value>
              </field>
              <field var='Name'>
                 <value>Witches Coven</value>
              </field>
              <field var='Description'>
                 <value>A location not far from the blasted heath where
                        the three witches meet</value>
              </field>
              <field var='Contact'>
                 <value>greymalkin@shakespeare.example</value>
              </field>
           </x>
         </item>
       </items>
     </publish>
  </pubsub>
</iq>

<iq from='mix.shakespeare.example'
    id='lx09df27'
    to='hag66@shakespeare.example/UUID-a1j/7533'
    type='result'>
    <pubsub xmlns='http://jabber.org/protocol/pubsub'>
      <publish node='urn:xmpp:mix:nodes:info'>
        <items>
           <item id='2016-05-30T09:00:00' xmlns='urn:xmpp:mix:core:0'/>
         </items>
       </publish>
   </pubsub>
</iq>
]]></example>
    </section2>
    <section2 topic='Modifying Channel Configuration' anchor='usecase-admin-information'>
      <p>Channel owners are allowed to modify the channel configuration.    The client MAY issue a pubsub get command to obtain a form that will facilitate update of the configuration node.  Other clients MAY be authorized to use this command to see the channel configuration, but only owners MAY update the configuration.   The values in the form show current values, which MAY be defaults or MAY have been explicitly set.  The following example shows a short form returned to illustrate the syntax.   A typical configuration form will be much larger with many fields.  Modifying channel configuration is done directly by a client.  Note that an Owner MUST be specified.   When the configuration node is modified, the server MUST set the 'Last Change Made By' attribute to the JID of the user making the change.
      </p>
      <example caption="Getting Configuration Form" ><![CDATA[
 <iq from='hag66@shakespeare.example/UUID-a1j/7533'
    id='lx09df27'
    to='mix.shakespeare.example'
    type='get'>
    <pubsub xmlns='http://jabber.org/protocol/pubsub'>
      <items node='urn:xmpp:mix:nodes:config'/>
     </pubsub>
</iq>

<iq from='mix.shakespeare.example'
    id='lx09df27'
    to='hag66@shakespeare.example/UUID-a1j/7533'
    type='result'>
     <pubsub xmlns='http://jabber.org/protocol/pubsub'>
      <items xmlns='urn:xmpp:mix:admin:0'  node='urn:xmpp:mix:nodes:config'>
        <item>
          <x xmlns='jabber:x:data' type='form'>
            <field var='FORM_TYPE' type='hidden'>
              <value>urn:xmpp:mix:admin:0</value>
            </field>
              <title>Configuration Node Modification</title>
            <field type='jid-multi'
                   label='Channel Administrator'
                   var='Administrator'/>
          </x>
        </item>
     </items>
   </pubsub>
</iq>
]]></example>
      <p>  Updating the information node is done using a pubsub set command.  The MIX channel MUST update the fields with values provided, leaving other fields unchanged.  The result returns the id used in the configuration node item, which is the date/time of the modification. </p>
      <example caption="Modifying Channel Configuration" ><![CDATA[
 <iq from='hag66@shakespeare.example/UUID-a1j/7533'
    id='lx09df27'
    to='mix.shakespeare.example'
    type='set'>
    <pubsub xmlns='http://jabber.org/protocol/pubsub'>
      <publish node='urn:xmpp:mix:nodes:config'>
        <items>
          <item>
            <x xmlns='jabber:x:data' type='submit'>
              <field var='FORM_TYPE' type='hidden'>
                 <value>urn:xmpp:mix:admin:0</value>
              </field>
              <field var='Owner'>
                 <value>hecate@shakespeare.example</value>
                 <value>greymalkin@shakespeare.example</value>
              </field>
              <field var='Messages Node Subscription'>
                <value>allowed</value>
              </field>
              <field var='JID Visibility'>
                <value>jid-mandatory-visible</value>
              </field>
              <field var='No Private Messages'>
                <value>true</value>
             </field>
           </x>
         <item/>
       <items/>
     </publish>
   </pubsub>
</iq>

<iq from='mix.shakespeare.example'
    id='lx09df27'
    to='hag66@shakespeare.example/UUID-a1j/7533'
    type='result'>
    <pubsub xmlns='http://jabber.org/protocol/pubsub'>
      <publish node='urn:xmpp:mix:nodes:config'>
        <item id='2016-05-30T09:00:00' xmlns='urn:xmpp:mix:admin:0'/>
       </publish>
   </pubsub>
</iq>
]]></example>
    </section2>
    <section2 topic='Controlling Channel Participants' anchor='usecase-admin-participants'>
      <p>
       Owners and Administrators are allowed to  control which users can participate in a channel by use of Allowed and Banned lists using PubSub.  These operations follow &xep0060; which sets out detailed protocol use and error handling.
       Allowed and Banned lists MAY be read by PubSub get of the Banned and Allowed Nodes.  This operation MAY be used by users as controlled by 'Allowed Node Subscription' and 'Banned Node Subscription' configuration node options (default Administrators).
      </p>
      <example caption="Client Reads Allowed Node" ><![CDATA[
<iq from='hag66@shakespeare.example/UUID-a1j/7533'
    id='lx09df27'
    to='mix.shakespeare.example'
    type='get'>
    <pubsub xmlns='http://jabber.org/protocol/pubsub'>
         <items node='urn:xmpp:mix:nodes:allowed'/>
    </pubsub>
</iq>

<iq from='mix.shakespeare.example'
    id='lx09df27'
    to='hag66@shakespeare.example/UUID-a1j/7533'
    type='result'>
    <pubsub xmlns='http://jabber.org/protocol/pubsub'>
         <items node='urn:xmpp:mix:nodes:allowed'>
            <item id='shakespeare.example'/>
            <item id='alice@wonderland.example'/>
         </items>
    </pubsub>
</iq>
]]></example>
      <p>
        JIDs can be added to the  Allowed and Banned nodes  by a pubsub set command.  This is used to add one item to a node.
      </p>
 <example caption="Client Adds a JID to the Allowed Node" ><![CDATA[
<iq from='hag66@shakespeare.example/UUID-a1j/7533'
    id='lx09df27'
    to='mix.shakespeare.example'
    type='set'>
    <pubsub xmlns='http://jabber.org/protocol/pubsub'>
        <publish node='urn:xmpp:mix:nodes:allowed'>
            <item id='marlow.example'/>
         </publish>
    </pubsub>
</iq>

<iq from='mix.shakespeare.example'
    id='lx09df27'
    to='hag66@shakespeare.example/UUID-a1j/7533'
    type='result'>
    <pubsub xmlns='http://jabber.org/protocol/pubsub'/>
</iq>
]]></example>
      <p>
        JIDs can be removed from the Allowed and Banned nodes by pubsub retract command.
      </p>
    <example caption="Client Removes a JID from the Banned Node" ><![CDATA[
<iq from='hag66@shakespeare.example/UUID-a1j/7533'
    id='lx09df27'
    to='mix.shakespeare.example'
    type='set'>
    <pubsub xmlns='http://jabber.org/protocol/pubsub'>
        <retract node='urn:xmpp:mix:nodes:banned'>
            <item id='lear@shakespeare.example'/>
        </retract>
    </pubsub>
</iq>

<iq from='mix.shakespeare.example'
    id='lx09df27'
    to='hag66@shakespeare.example/UUID-a1j/7533'
    type='result'>
    <pubsub xmlns='http://jabber.org/protocol/pubsub'/>
</iq>
]]></example>
      <p>
        When the MIX channel adds a JID to the banned node, other nodes in the MIX channel will be appropriately updated to reflect this change.  In particular, the participants nodes and presence nodes will be updated to remove matching JIDs.    This will have the effect of immediately removing the user from the channel.  For this reason, there is no requirement to have the "kick" functionality of MUC, as this is achieved by banning the user.
      </p>
    </section2>

  </section1>





<section1 topic='Internationalization Considerations' anchor='i18n'>
  <p>See considerations in &xep0369;.
  </p>

</section1>

<section1 topic='Security Considerations' anchor='security'>
  <p>See considerations in &xep0369;.</p>



</section1>

<section1 topic='IANA Considerations' anchor='iana'>
  <p>None.</p>
</section1>

<section1 topic='XMPP Registrar Considerations' anchor='registrar'>
  <p>The urn:xmpp:mix namespace needs to be registered.</p>
</section1>

<section1 topic='XML Schema' anchor='schema'>
  <p>To be supplied when MIX progresses to proposed standard.</p>
</section1>

<section1 topic='Acknowledgements' anchor='ack'>
  <p>See &xep0369; for a list of contributors to the MIX Family of specifications.</p>
</section1>

</xep>
