<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE xep SYSTEM 'xep.dtd' [
  <!ENTITY % ents SYSTEM 'xep.ent'>
%ents;
]>
<?xml-stylesheet type='text/xsl' href='xep.xsl'?>
<xep>
<header>
  <title>DMUC2: Distributed MUC</title>
  <abstract>Multi-User Chats, distributed over several nodes in the XMPP network, using a primary/replica architecture</abstract>
  &LEGALNOTICE;
  <number>0282</number>
  <status>Deferred</status>
  <type>Standards Track</type>
  <sig>Standards</sig>
  <approver>Council</approver>
  <dependencies>
    <spec>XMPP Core</spec>
    <spec>XEP-0045</spec>
  </dependencies>
  <supersedes/>
  <supersededby/>
  <shortname>NOT-YET-ASSIGNED</shortname>
  <author>
    <firstname>Carlo</firstname>
    <surname>von Loesch</surname>
    <jid>lynx@psyced.org</jid>
  </author>
  <author>
    <firstname>Philipp</firstname>
    <surname>Hancke</surname>
    <jid>fippo@ve.symlynx.com</jid>
  </author>
  <revision>
    <version>0.1.1</version>
    <date>2021-03-04</date>
    <initials>mw</initials>
    <remark><p>Cross-document editorial adjustments for inclusive language.</p></remark>
  </revision>
  <revision>
    <version>0.1</version>
    <date>2010-06-11</date>
    <initials>psa</initials>
    <remark><p>Initial published version.</p></remark>
  </revision>
  <revision>
    <version>0.0.1</version>
    <date>2010-03-15</date>
    <initials>cvl/ph</initials>
    <remark><p>First draft.</p></remark>
  </revision>
</header>
<section1 topic='Introduction' anchor='intro'>
  <p class='box'><em>This document is one of several proposals for distributing XMPP chat rooms across multiple chat services. It is expected that the various approaches will be refined and harmonized before a final protocol is developed.</em></p>
  <p>The architecture is that of a single root node, called PRIMARY and several repeater nodes, each called REPLICA. Every stanza is submitted via the replicas to the primary, control is centralized there. The primary then sends a copy of the stanza to each of the replicas where it is processed and then distributed to each of the replica's leaf nodes, local users at this point. During redistribution, the replica shall not change the stanza's 'from' attribute, which is only possible if the replica is in the same security domain as the user. The result of that is a decreased number of messages on the server-to-server links between the primary's server and each of the replica servers.</p>
  <code><![CDATA[
BigCheese ----> vesa.yeggmaex.irc ----> wallops MUC ----> killrc.oulubox.irc ----> Wumpus
                                                          killrc.oulubox.irc ----> Phaedrus
							  killrc.oulubox.irc ----> Valdis
                                        wallops MUC ----> eris.dclxvii.irc   ----> WiZ
                                                          eris.dclxvii.irc   ----> Troy
			                wallops MUC ----> vesa.yeggmaex.irc  ----> BigCheese
					                  vesa.yeggmaex.irc  ----> Efchen
]]></code>
  <p>Note that this only applies to stanzas that are directed to all occupants, such as the change of availability status and messages whose 'type' attribute is set to 'groupchat'.</p>
  <p>While 1-1 stanzas such as in-room private messages or vcard-temp requests may also travel along that path they are currently unaffected by this.</p>
</section1>
<section1 topic='Requirements' anchor='reqs'>
  <p>This specification addresses the following requirements:</p>
  <ul>
    <li>The existence of the replica shall be transparent for the user.</li>
    <li>Enable detection of connection loss.</li>
    <li>Enable occupants to remain in instance of the conference if connectivity is lost to other instances.</li>
    <li>Enable occupants to leave a chatroom while connectivity is lost.</li>
    <li>Enable syncing of history and room rosters on reconnect.</li>
    <li>Improve distribution of 'broadcast' stanzas'.</li>
  </ul>
</section1>
<section1 topic='Terminology' anchor='terms'>
<!--
  <section2 topic='General Terms' anchor='terms-general'>
    <dl>
      <di>
        <dt>Primary</dt>
	<dd></dd>
      </di>
      <di>
        <dt>Replica</dt>
	<dd></dd>
      </di>
      <di>
        <dt>Netsplit</dt>
	<dd></dd>
      </di>
      <di>
        <dt>CASTMSG</dt>
	<dd>wut? you don't need this</dd>
      </di>
      <di>
        <dt>ENTER</dt>
	<dd>?</dd>
      </di>
      <di>
        <dt>LEAVE</dt>
	<dd>?</dd>
      </di>
     </dl>
  </section2>
  -->
  <section2 topic='Dramatis Personae' anchor='terms-personae'>
    <p>Most of the examples in this document use the scenario of the 1990 war that split the <cite>Internet Relay Chat</cite> into several incompatible networks. The battlefield is represented here by the "wallops@channel.avalon.irc" chatroom. The characters are as follows:</p>
    <table caption='Dramatis Personae'>
      <tr>
        <th>Room Nickname</th>
        <th>Full JID</th>
        <th>Role</th>
      </tr>
      <tr>
        <td>Wumpus</td>
        <td>argl@killrc.oulubox.irc/laptop</td>
        <td>Moderator</td>
      </tr>
      <tr>
        <td>Valdis</td>
        <td>valdis@killrc.oulubox.irc/desktop</td>
        <td>Participant</td>
      </tr>
      <tr>
        <td>Phaedrus</td>
        <td>phaedrus@killrc.oulubox.irc/phone</td>
        <td>Participant</td>
      </tr>
      <tr>
        <td>WiZ</td>
        <td>squit@eris.dclxvii.irc/jupiter</td>
        <td>Moderator</td>
      </tr>
      <tr>
        <td>Troy</td>
        <td>troy@eris.dclxvii.irc/screwdriver</td>
        <td>Moderator</td>
      </tr>
      <tr>
        <td>BigCheese</td>
        <td>rubenro@vesa.yeggmaex.irc/shaver</td>
        <td>Participant</td>
      </tr>
      <tr>
        <td>Efchen</td>
        <td>msa@vesa.yeggmaex.irc/bicycle</td>
        <td>Participant</td>
      </tr>
    </table>
    <p>In our example we are presuming that three replicas from three hosts have registered with the primary for traffic redistribution. They are doing so using replica@host jids, but they could be using any temporary jid the implementor finds useful to choose.</p>
  </section2>
</section1>
<section1 topic='PRIMARY/REPLICA Protocol' anchor='primaryreplica'>
  <p>This section describes the protocol between the primary and the replicas, the interaction between each replica and its users are described in the next section.</p>
  <!--
  <section2 topic='Narrative Protocol Description'>
    <p>some blabla</p>
  </section2>
  -->
  <section2 topic='Replica Requirements'>
    <p>The replica</p>
    <ul>
      <li>must be able to intercept any stanzas sent to the primary's jid,</li>
      <li>must be able to verify if a local user has sent directed presence to the primary's jid,</li>
      <li>must store room roster,</li>
      <li>must store local room roster</li>
      <li>must store room history (if desired by primary)</li>
    </ul>
  </section2>
  <section2 topic='Creating a Replica'>
    <p>to follow</p>
    <p>Might include things like negotiation of keepalive frequency and amount of room might be useful to set some things like keepalive frequency, keeping/storing room history etc.</p>
    <!--
    <p>maxstanzas / maxbytes attribute</p>
    <p>PARANOIA: why should the replica let the primary create the replica and send room roster and history?</p>
    -->
  </section2>
  <section2 topic='Initial Room Roster'>
    <p>After the creation of a new replica, the primary must send the room roster (which at that time only consists of remote participants) to the replica:</p>
    <example caption="Primary Sends Room Roster to Replica"><![CDATA[
<presence
    from='wallops@channel.avalon.irc/Wumpus'
    to='replica@vesa.yeggmaex.irc'>
  <x xmlns='http://jabber.org/protocol/muc#user'>
    <item affiliation='owner' role='moderator'/>
  </x>
</presence>
<presence
    from='wallops@channel.avalon.irc/Valdis'
    to='replica@vesa.yeggmaex.irc'>
  <x xmlns='http://jabber.org/protocol/muc#user'>
    <item affiliation='none' role='participant'/>
  </x>
</presence>
<presence
    from='wallops@channel.avalon.irc/Phaedrus'
    to='replica@vesa.yeggmaex.irc'>
  <x xmlns='http://jabber.org/protocol/muc#user'>
    <item affiliation='none' role='participant'/>
  </x>
</presence>
<presence
    from='wallops@channel.avalon.irc/WiZ'
    to='replica@vesa.yeggmaex.irc'>
  <x xmlns='http://jabber.org/protocol/muc#user'>
    <item affiliation='admin' role='moderator'/>
  </x>
</presence>
<presence
    from='wallops@channel.avalon.irc/Troy'
    to='replica@vesa.yeggmaex.irc'>
  <x xmlns='http://jabber.org/protocol/muc#user'>
    <item affiliation='participant' role='moderator'/>
  </x>
</presence>]]></example>
    <!--
    <p>Tricky: if this does not contain the full jid, the (initial) presence information sent to moderators that join later will not be possible... mh!</p>
    -->
  </section2>
  <section2 topic='Initial Room History'>
    <p>After the creation of a new replica, the primary MAY also send the discussion history to the replica. The replica shall store this and deliver it to entering participants.</p>
    <p>from=primaryjid to=replicajid?</p>
  </section2>
  <section2 topic='ENTER'>
    <p>If a new occupant requests to enter the room, the primary first sends a presence update to all participants to inform them of the presence of the new user. Then, the primary sends the affected replica a stanza requesting it to add the user to the distribution list</p>
    <example caption="Primary informs Replica of New Occupant"><![CDATA[
<presence
    from='wallops@channel.avalon.irc/BigCheese'
    to='replica@vesa.yeggmaex.irc'>
  <x xmlns='urn:xmpp:tmp:dmuc:0'>
    <enter jid='rubenro@vesa.yeggmaex.irc/shaver'/>
    <history maxstanzas='20'/>
  </x>
  ...
</presence>]]></example>
    <p>The replica MUST verify that the user has sent directed presence to the primary's JID before. This helps to ensure that the user intended to enter the room. If this is ture, the replica shall add the user to the distribution list and send the room roster, occupants own presence in room and discussion history to the full jid of the added user.</p>
  </section2>
  <section2 topic='LEAVE'>
    <p>If an occupant sends an unavailable presence to the room, the primary sends the affected replica a stanza requesting it to remove the user from the distribution list.</p>
    <example caption="Primary informs Replica of Occupant's Departure"><![CDATA[
<presence
    from='wallops@channel.avalon.irc/BigCheese'
    to='replica@vesa.yeggmaex.irc'
    type='unavailable'>
  <x xmlns='urn:xmpp:tmp:dmuc:0'>
    <leave jid='rubenro@vesa.yeggmaex.irc/shaver'/>
  </x>
  ...
</presence>]]></example>
    <p>The replica removes user and forwards the stanza to user.</p>
    <p>The primary then sends a presence update to all replicas to announce the occupants departure.</p>
  </section2>
  <section2 topic='Presence Update'>
    <p>Presence updates are distributed by the primary to all replicas.</p>
    <example caption="Primary sends presence update"><![CDATA[
<presence
    from='wallops@channel.avalon.irc/BigCheese'
    to='replica@killrc.oulubox.irc'>
  <x xmlns='http://jabber.org/protocol/muc#user'>
    <item affiliation='none'
          jid='rubenro@vesa.yeggmaex.irc/shaver'
          role='participant'/>
  </x>
  ...
</presence>
<presence
    from='wallops@channel.avalon.irc/BigCheese'
    to='replica@eris.dclxvii.irc'>
  <x xmlns='http://jabber.org/protocol/muc#user'>
    <item affiliation='none'
          jid='rubenro@vesa.yeggmaex.irc/shaver'
          role='participant'/>
  </x>
  ...
</presence>
<presence
    from='wallops@channel.avalon.irc/BigCheese'
    to='replica@vesa.yeggmaex.irc'>
  ...
</presence>]]></example>
    <p>Note that the primary MUST NOT send the full jid of the user to any replicas without members that are moderators.</p>
    <p>When rebroadcasting this stanza to its local occupants, the replica MUST remove the participants full JID subject to the rules of XEP-0045. In addition, the replica stores the resulting changes to the room roster, so that it can send the correct state to entering users.</p>
  </section2>
  <section2 topic='Replica Forwards Stanza to Primary'>
    <p>The replica may relay messages from local users to the primary. When doing so, it MUST NOT modify the stanzas 'from' attribute but MUST retain the original address of the sender.</p>
    <!--
    <p>Die Regel ist relativ einfach... from=fulljid to=primaryjid/undevtlresource</p>
    <p>fulljid deshalb, damit der primary nicht checken muss ob der jeweilige user auf dem replica ist und ausserdem der jeweilige user nicht zwangsläufig im Raum sein muss...</p>
    <p>Beispiele: message submit, presence update, privatchat innerhalb raum, vcard avatar get</p>
    -->
    <example caption="Replica Relays a Message to the Primary"><![CDATA[
<message
    from='rubenro@vesa.yeggmaex.irc/shaver'
    to='wallops@channel.avalon.irc'
    type='groupchat'>
  <body>Phaedrus, we're all having a truly rotten time.</body>
</message>]]></example>
    <!--
    <p>Some rules:</p>
    <ul>
      <li>The stanzas 'from' attribute MUST be retained.</li>
      <li>Stanzas from participants and non-participants must be routed</li>
    </ul>
    -->
  </section2>
  <section2 topic='Message Broadcast'>
    <p>When relaying a message, the primary SHOULD add a urn:xmpp:delay element inside dmuc element so that the replica can provide proper timestamps to new users. The primary then sends a copy of the stanza to each replica.</p>
    <example caption="Message from Primary to all Replicas"><![CDATA[
<message
    from='wallops@channel.avalon.irc/BigCheese'
    to='replica@killrc.oulubox.irc'
    type='groupchat'>
  <body>Phaedrus, we're all having a truly rotten time.</body>
  <x xmlns='urn:xmpp:tmp:dmuc:0'>
      <delay xmlns='urn:xmpp:delay'
        from='wallops@channel.avalon.irc/BigCheese'
	stamp='1990-10-13T23:58:37Z'/>
  </x>
</message>
<message
    from='wallops@channel.avalon.irc/BigCheese'
    to='replica@eris.dclxvii.irc'
    type='groupchat'>
  <body>Phaedrus, we're all having a truly rotten time.</body>
  <x xmlns='urn:xmpp:tmp:dmuc:0'>
      <delay xmlns='urn:xmpp:delay'
        from='wallops@channel.avalon.irc/BigCheese'
	stamp='1990-10-13T23:58:37Z'/>
  </x>
</message>
<message
    from='wallops@channel.avalon.irc/BigCheese'
    to='replica@vesa.yeggmaex.irc'
    type='groupchat'>
  <body>Phaedrus, we're all having a truly rotten time.</body>
  <x xmlns='urn:xmpp:tmp:dmuc:0'>
      <delay xmlns='urn:xmpp:delay'
        from='wallops@channel.avalon.irc/BigCheese'
	stamp='1990-10-13T23:58:37Z'/>
  </x>
</message>]]></example>
    <p>After saving the stanza for the purpose of keeping a room history, the replica SHOULD remove the urn:xmpp:tmp:dmuc:0 element and send the stanza to each local user.</p>
  </section2>
  <section2 topic='Primary-Replica Keepalive'>
    <p>To ensure a working connecting, the primary SHOULD send an XMPP Ping stanza to each replica if there has been no traffic for a certain amount of time.</p>
    <p>Likewise, each replica should ping the primary if there has been no traffic for more than the usual amount of time.</p>
  </section2>
  <section2 topic='Netsplit' anchor='netsplit'>
    <section3 topic='Netsplit Detection' anchor='netsplit-detect'>
      <p>A 'lost connection' can be detected by either replica or primary when a stanza sent to the primary or a replica respectively bounced.</p>
      <section4 topic='At the Primary'>
        <p>If the primary receives a stanza with type=error from the replica JID, it MUST:</p>
        <ul>
          <li>mark the replica as 'split', making sure that any further broadcasts are not sent to the affected replica</li>
	  <li>start sending pings to the replica with a higher frequency to get a timely notification if the replica reappears</li>
	  <li>resync when the replica reappears as described below</li>
        </ul>
        <p>In addition, the primary MAY send a presence update for each user on the affected replica, marking them as away.</p>
      </section4>
      <section4 topic='At the Replica'>
        <p>If the replica receives a stanza with type=error from the primary's JID, it MUST:</p>
	<ul>
	  <li>stop submitting messages to the primary</li>
	  <li>react to people sending presence updates or leaving the room and broadcast those changes to local users</li>
	</ul>
	<p>In addition, the replica MAY (and be careful when using this):</p>
	<ul>
	  <li>enable local participants to continue their in-room conversation with other local participants</li>
	  <li>enable local participants to continue 1-1 messaging in the context of a room (such as private chat or vcard retrieval)</li>
	  <li>enable local users to enter the room (DANGER!!!)</li>
	  <li>enable moderators (as designated by the primary) to kick participants</li>
	  <li>mark non-local users as away</li>
	</ul>
      </section4>
    </section3>
    <section3 topic='Netjoin' anchor='netjoin'>
      <p>to follow</p>
    </section3>
  </section2>
</section1>
<section1 topic='Use-Cases' anchor='Uses-Cases'>
  <p>This section narratively describes the primary-replica protocol in context with client interactions.</p>
  <section2 topic='Entering a Room' anchor='enter'>
    <p>The user seeks to enter the wallops chatroom with the room nickname BigCheese:</p>
    <example caption="User Seeks to Enter Room"><![CDATA[
<presence
    from='rubenro@vesa.yeggmaex.irc/shaver'
    to='wallops@channel.avalon.irc/BigCheese'>
  <x xmlns='http://jabber.org/protocol/muc'/>
</presence>]]></example>
    <p>The primary sends the presence update to each replica to inform the current occupants of BigCheese's arrival:</p>
    <example caption="Primary Sends Presence Update to all Replicas"><![CDATA[
<presence
    from='wallops@channel.avalon.irc/BigCheese'
    to='replica@killrc.oulubox.irc'>
  <x xmlns='http://jabber.org/protocol/muc#user'>
    <item affiliation='none'
          jid='rubenro@vesa.yeggmaex.irc/shaver'
          role='participant'/>
  </x>
  ...
</presence>
<presence
    from='wallops@channel.avalon.irc/BigCheese'
    to='replica@eris.dclxvii.irc'>
  <x xmlns='http://jabber.org/protocol/muc#user'>
    <item affiliation='none'
          jid='rubenro@vesa.yeggmaex.irc/shaver'
          role='participant'/>
  </x>
  ...
</presence>
<presence
    from='wallops@channel.avalon.irc/BigCheese'
    to='replica@vesa.yeggmaex.irc'>
  ...
</presence>]]></example>
    <p>Each replica then distributes this presence update:</p>
    <example caption="Replicas Distribute Presence Update to Users - killrc Replica"><![CDATA[
<presence
    from='wallops@channel.avalon.irc/BigCheese'
    to='argl@killrc.oulubox.irc/laptop'>
  <x xmlns='http://jabber.org/protocol/muc#user'>
    <item affiliation='none'
          jid='rubenro@vesa.yeggmaex.irc/shaver'
          role='participant'/>
  </x>
  ...
</presence>
<presence
    from='wallops@channel.avalon.irc/BigCheese'
    to='valdis@killrc.oulubox.irc/desktop'>
  ...
</presence>
<presence
    from='wallops@channel.avalon.irc/BigCheese'
    to='phaedrus@killrc.oulubox.irc/phone'>
  ...
</presence>]]></example>
    <example caption="Replicas Distribute Presence Update to Users - eris Replica"><![CDATA[
<presence
    from='wallops@channel.avalon.irc/WiZ'
    to='squit@eris.dclxvii.irc/jupiter'>
  <x xmlns='http://jabber.org/protocol/muc#user'>
    <item affiliation='none'
          jid='rubenro@vesa.yeggmaex.irc/shaver'
          role='participant'/>
  </x>
  ...
</presence>
<presence
    from='wallops@channel.avalon.irc/WiZ'
    to='troy@eris.dclxvii.irc/screwdriver'>
  <x xmlns='http://jabber.org/protocol/muc#user'>
    <item affiliation='none'
          jid='rubenro@vesa.yeggmaex.irc/shaver'
          role='participant'/>
  </x>
  ...
</presence>]]></example>
    <example caption="Replicas Distribute Presence Update to Users - vesa Replica"><![CDATA[
<presence
    from='wallops@channel.avalon.irc/BigCheese'
    to='rubenro@vesa.yeggmaex.irc/shaver'>
  ...
</presence>]]></example>
    <p>The primary then informs the replica of the entered user about a new occupant:</p>
    <example caption="Primary Informs Replica of New Occupant"><![CDATA[
<presence
    from='wallops@channel.avalon.irc/BigCheese'
    to='replica@vesa.yeggmaex.irc'>
  <x xmlns='urn:xmpp:tmp:dmuc:0'>
    <enter jid='rubenro@vesa.yeggmaex.irc/shaver'/>
  </x>
  ...
</presence>]]></example>
    <p>The replica sends presence from existing occupants to new occupant:</p>
    <example caption='Replica Sends Presence from Existing Occupants to New Occupant'><![CDATA[
<presence
    from='wallops@channel.avalon.irc/Wumpus'
    to='rubenro@vesa.yeggmaex.irc/shaver'>
  <x xmlns='http://jabber.org/protocol/muc#user'>
    <item affiliation='owner' role='moderator'/>
  </x>
</presence>
<presence
    from='wallops@channel.avalon.irc/Valdis'
    to='rubenro@vesa.yeggmaex.irc/shaver'>
  <x xmlns='http://jabber.org/protocol/muc#user'>
    <item affiliation='none' role='participant'/>
  </x>
</presence>
<presence
    from='wallops@channel.avalon.irc/Phaedrus'
    to='rubenro@vesa.yeggmaex.irc/shaver'>
  <x xmlns='http://jabber.org/protocol/muc#user'>
    <item affiliation='none' role='participant'/>
  </x>
</presence>
<presence
    from='wallops@channel.avalon.irc/WiZ'
    to='rubenro@vesa.yeggmaex.irc/shaver'>
  <x xmlns='http://jabber.org/protocol/muc#user'>
    <item affiliation='admin' role='moderator'/>
  </x>
</presence>
<presence
    from='wallops@channel.avalon.irc/Troy'
    to='rubenro@vesa.yeggmaex.irc/shaver'>
  <x xmlns='http://jabber.org/protocol/muc#user'>
    <item affiliation='participant' role='moderator'/>
  </x>
</presence>
<presence
    from='wallops@channel.avalon.irc/Efchen'
    to='rubenro@vesa.yeggmaex.irc/shaver'>
  <x xmlns='http://jabber.org/protocol/muc#user'>
    <item affiliation='none' role='participant'/>
  </x>
</presence>]]></example>
    <p>and concludes the room roster by sending the new occupant's presence to the new occupant:</p>
    <example caption="Replica Sends New Occupant's Presence to New Occupant"><![CDATA[
<presence
    from='wallops@channel.avalon.irc/BigCheese'
    to='rubenro@vesa.yeggmaex.irc/shaver'
  ...
</presence>]]></example>
    <p>After that, the replica will send the discussion history to the new occupant:</p>
    <example caption='Replica Sends Discussion History to New Occupant'><![CDATA[
<message from='wallops@channel.avalon.irc/Trillian'
    to='rubenro@vesa.yeggmaex.irc/shaver'
    type='groupchat'>
    <body>Honest! He did!!</body>
    <delay xmlns='urn:xmpp:delay'
      from='wallops@channel.avalon.irc/Trillian'
      stamp='1990-01-23T19:50:01Z'/>
</message>
<message from='wallops@channel.avalon.irc/BlondeBoy'
    to='rubenro@vesa.yeggmaex.irc/shaver'
    type='groupchat'>
    <body>Was that absolutely necessary????????</body>
    <delay xmlns='urn:xmpp:delay'
      from='wallops@channel.avalon.irc/BlondeBoy'
      stamp='1990-01-23T19:50:30Z'/>
</message>
<message from='wallops@channel.avalon.irc/DCLXVI'
    to='rubenro@vesa.yeggmaex.irc/shaver'
    type='groupchat'>
    <body>SUUUUUUURE he did</body>
    <delay xmlns='urn:xmpp:delay'
      from='wallops@channel.avalon.irc/DCLXVI'
      stamp='1990-01-23T19:50:51Z'/>
</message>
<message from='wallops@channel.avalon.irc/Cerebus'
    to='rubenro@vesa.yeggmaex.irc/shaver'
    type='groupchat'>
    <body>He did.  really truly he did.</body>
    <delay xmlns='urn:xmpp:delay'
      from='wallops@channel.avalon.irc/Cerebus'
      stamp='1990-01-23T19:51:20Z'/>
</message>
]]></example>
  </section2>
  <section2 topic='Sending a Message to All Occupants' anchor='msg'>
    <example caption="Occupant Sends a Message to All Occupants"><![CDATA[
<message
    from='rubenro@vesa.yeggmaex.irc/shaver'
    to='wallops@channel.avalon.irc'
    type='groupchat'>
  <body>Phaedrus, we're all having a truly rotten time.</body>
</message>]]></example>
    <p>The primary will broadcast this message to all replicas:</p>
    <example caption="Primary Distributes Message to all Replicas"><![CDATA[
<message
    from='wallops@channel.avalon.irc/BigCheese'
    to='replica@killrc.oulubox.irc'
    type='groupchat'>
  <body>Phaedrus, we're all having a truly rotten time.</body>
  <x xmlns='urn:xmpp:tmp:dmuc:0'>
      <delay xmlns='urn:xmpp:delay'
        from='wallops@channel.avalon.irc/BigCheese'
	stamp='1990-10-13T23:58:37Z'/>
  </x>
</message>
<message
    from='wallops@channel.avalon.irc/BigCheese'
    to='replica@eris.dclxvii.irc'
    type='groupchat'>
  <body>Phaedrus, we're all having a truly rotten time.</body>
  <x xmlns='urn:xmpp:tmp:dmuc:0'>
      <delay xmlns='urn:xmpp:delay'
        from='wallops@channel.avalon.irc/BigCheese'
	stamp='1990-10-13T23:58:37Z'/>
  </x>
</message>
<message
    from='wallops@channel.avalon.irc/BigCheese'
    to='replica@vesa.yeggmaex.irc'
    type='groupchat'>
  <body>Phaedrus, we're all having a truly rotten time.</body>
  <x xmlns='urn:xmpp:tmp:dmuc:0'>
      <delay xmlns='urn:xmpp:delay'
        from='wallops@channel.avalon.irc/BigCheese'
	stamp='1990-10-13T23:58:37Z'/>
  </x>
</message>]]></example>
    <p>And each replica distributes to local occupants</p>
    <example caption="Replica Distributes Message to Occupants - killrc Replica"><![CDATA[
<message
    from='wallops@channel.avalon.irc/BigCheese'
    to='argl@killrc.oulubox.irc/laptop'
    type='groupchat'>
  <body>Phaedrus, we're all having a truly rotten time.</body>
</message>
<message
    from='wallops@channel.avalon.irc/BigCheese'
    to='valdis@killrc.oulubox.irc/desktop'
    type='groupchat'>
  <body>Phaedrus, we're all having a truly rotten time.</body>
</message>
<message
    from='wallops@channel.avalon.irc/BigCheese'
    to='phaedrus@killrc.oulubox.irc/phone'
    type='groupchat'>
  <body>Phaedrus, we're all having a truly rotten time.</body>
</message>]]></example>
    <example caption="Replica Distributes Message to Occupants - eris Replica"><![CDATA[
<message
    from='wallops@channel.avalon.irc/BigCheese'
    to='squit@eris.dclxvii.irc/jupiter'
    type='groupchat'>
  <body>Phaedrus, we're all having a truly rotten time.</body>
</message>
<message
    from='wallops@channel.avalon.irc/BigCheese'
    to='troy@eris.dclxvii.irc/screwdriver'
    type='groupchat'>
  <body>Phaedrus, we're all having a truly rotten time.</body>
</message>]]></example>
    <example caption="Replica Distributes Message to Occupants - vesa Replica"><![CDATA[
<message
    from='wallops@channel.avalon.irc/BigCheese'
    to='rubenro@vesa.yeggmaex.irc/shaver'
    type='groupchat'>
  <body>Phaedrus, we're all having a truly rotten time.</body>
</message>
<message
    from='wallops@channel.avalon.irc/BigCheese'
    to='msa@vesa.yeggmaex.irc/bicycle'
    type='groupchat'>
  <body>Phaedrus, we're all having a truly rotten time.</body>
</message>]]></example>
  </section2>
</section1>
<section1 topic='Security Considerations' anchor='security'>
  <p>to follow</p>
  <p>Careful with channel overtakes :-)</p>
</section1>
<section1 topic='IANA Considerations' anchor='iana'>
  <p>This document requires no interaction with &IANA;.</p>
</section1>
<section1 topic='XMPP Registrar Considerations' anchor='registrar'>
  <p>This document requires no interaction with the &REGISTRAR;.</p>
</section1>
<section1 topic='XML Schema' anchor='schema'>
  <p>to follow</p>
</section1>
</xep>
