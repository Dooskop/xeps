stages:
- build
- export

"build@main":
  image: registry.gitlab.com/xsf/docker-images/xep-buildspace/image:0.1.0
  stage: build
  script:
  - python3 tools/ci-restore-timestamps.py
  - make html inbox-html inbox-xml pdf xeplist refs xml
  - bash tools/ci-prune-build.sh
  rules:
  - if: '$CI_COMMIT_REF_NAME =~ /^main$/'
    when: always
  - when: never
  cache:
    key: build-cache
    paths:
    - build/
  artifacts:
    paths:
    - build/
    expire_in: '1 day'
  resource_group: xep-build

"pack@main":
  image: docker:19.03.11
  stage: export
  services:
  - docker:19.03.11-dind
  script:
  - 'export IMAGE_REF="${CI_REGISTRY_IMAGE}/packed:main-$(date -Idate)-${CI_COMMIT_SHORT_SHA}"'
  - 'export LATEST_REF="${CI_REGISTRY_IMAGE}/packed:main-latest"'
  - 'docker build -t "$IMAGE_REF" -f pack-only.Dockerfile .'
  - 'docker image tag "$IMAGE_REF" "$LATEST_REF"'
  - 'docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY'
  - 'docker push "$IMAGE_REF"'
  - 'docker push "$LATEST_REF"'
  rules:
  - if: '$CI_COMMIT_REF_NAME =~ /^main$/'
    when: on_success
  - when: never
  resource_group: xep-pack

"attic@main":
  image: python:3
  stage: export
  script:
  - bash -x ./tools/ci-archive.sh
  cache:
    paths:
    - state/
    key: attic-state
  rules:
  - if: '$CI_COMMIT_REF_NAME =~ /^main$/'
    when: on_success
  - when: never
  resource_group: xep-attic

"announce@main":
  image: python:3
  stage: export
  script:
  - bash -x ./tools/ci-announce.sh
  cache:
    paths:
    - state/
    key: announce-state
  rules:
  - if: '$CI_COMMIT_REF_NAME =~ /^main$/'
    when: on_success
  - when: never
  resource_group: xep-announce

"build@mr":
  image: registry.gitlab.com/xsf/docker-images/xep-buildspace-slim/image:0.1.1
  stage: build
  script:
  - python3 tools/ci-restore-timestamps.py
  - make html inbox-html
  - git fetch --depth=1 origin main
  - bash tools/ci-changed-builds.sh origin/main
  rules:
  - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    when: always
  - when: never
  cache:
    key: build-cache
    paths:
    - build/
    policy: pull
  artifacts:
    expose_as: "Changed Documents"
    paths: ["rendered-changes/"]
    expire_in: '7 days'

